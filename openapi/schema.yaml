openapi: 3.1.0
info:
  title: card-server
  version: 0.0.1
  description: Card Server OpenAPI Spec
  summary: Card Server OpenAPI Spec
tags:
  - name: post
    description: Post operations
  - name: phrase
    description: Phrase operations
  - name: article
    description: Article operations
  - name: conversation
    description: Conversation operations
  - name: account
    description: Account operations
  - name: session
    description: Session operations
  - name: user
    description: User operations
  - name: verificationToken
    description: VerificationToken operations
components:
  schemas:
    PostScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - createdAt
        - updatedAt
        - published
    PhraseScalarFieldEnum:
      type: string
      enum:
        - id
        - text
        - textTranslation
        - sentence
        - sentenceTranslation
        - articleId
        - conversationId
        - createdAt
        - updatedAt
        - createdById
    ArticleScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - externalLink
        - createdAt
        - updatedAt
        - createdById
    ConversationScalarFieldEnum:
      type: string
      enum:
        - id
        - messages
        - createdAt
        - updatedAt
    AccountScalarFieldEnum:
      type: string
      enum:
        - id
        - userId
        - type
        - provider
        - providerAccountId
        - refresh_token
        - access_token
        - expires_at
        - token_type
        - scope
        - id_token
        - session_state
        - refresh_token_expires_in
    SessionScalarFieldEnum:
      type: string
      enum:
        - id
        - sessionToken
        - userId
        - expires
    UserScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - email
        - emailVerified
        - password
        - image
    VerificationTokenScalarFieldEnum:
      type: string
      enum:
        - identifier
        - token
        - expires
    SortOrder:
      type: string
      enum:
        - asc
        - desc
    QueryMode:
      type: string
      enum:
        - default
        - insensitive
    NullsOrder:
      type: string
      enum:
        - first
        - last
    Post:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        published:
          type: boolean
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - published
    Phrase:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        article:
          $ref: "#/components/schemas/Article"
        articleId:
          type: string
        conversation:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Conversation"
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - id
        - text
        - article
        - articleId
        - createdAt
        - updatedAt
        - createdById
    Article:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        phrases:
          type: array
          items:
            $ref: "#/components/schemas/Phrase"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - createdById
    Conversation:
      type: object
      properties:
        id:
          type: string
        messages:
          type: string
        phrase:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Phrase"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - messages
        - createdAt
        - updatedAt
    Account:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
        user:
          $ref: "#/components/schemas/User"
        refresh_token_expires_in:
          oneOf:
            - type: "null"
            - type: integer
      required:
        - id
        - userId
        - type
        - provider
        - providerAccountId
        - user
    Session:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
        - sessionToken
        - userId
        - expires
        - user
    User:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          type: string
        image:
          oneOf:
            - type: "null"
            - type: string
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/Account"
        sessions:
          type: array
          items:
            $ref: "#/components/schemas/Session"
      required:
        - id
        - password
    VerificationToken:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - identifier
        - token
        - expires
    PostWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/PostWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/PostWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/PostWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/PostWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/PostWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        published:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
    PostOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        published:
          $ref: "#/components/schemas/SortOrder"
    PostWhereUniqueInput:
      type: object
      properties:
        id:
          type: integer
        AND:
          oneOf:
            - $ref: "#/components/schemas/PostWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/PostWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/PostWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/PostWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/PostWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        published:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
    PostScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/PostScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/PostScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/PostScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/PostScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/PostScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/IntWithAggregatesFilter"
            - type: integer
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        published:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
    PhraseWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/PhraseWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/PhraseWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/PhraseWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        text:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        textTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        sentence:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        sentenceTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        articleId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        conversationId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        article:
          oneOf:
            - $ref: "#/components/schemas/ArticleRelationFilter"
            - $ref: "#/components/schemas/ArticleWhereInput"
        conversation:
          oneOf:
            - $ref: "#/components/schemas/ConversationNullableRelationFilter"
            - $ref: "#/components/schemas/ConversationWhereInput"
            - type: "null"
    PhraseOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        text:
          $ref: "#/components/schemas/SortOrder"
        textTranslation:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        sentence:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        sentenceTranslation:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        articleId:
          $ref: "#/components/schemas/SortOrder"
        conversationId:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        createdById:
          $ref: "#/components/schemas/SortOrder"
        article:
          $ref: "#/components/schemas/ArticleOrderByWithRelationInput"
        conversation:
          $ref: "#/components/schemas/ConversationOrderByWithRelationInput"
    PhraseWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        conversationId:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/PhraseWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/PhraseWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/PhraseWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseWhereInput"
        text:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        textTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        sentence:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        sentenceTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        articleId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        article:
          oneOf:
            - $ref: "#/components/schemas/ArticleRelationFilter"
            - $ref: "#/components/schemas/ArticleWhereInput"
        conversation:
          oneOf:
            - $ref: "#/components/schemas/ConversationNullableRelationFilter"
            - $ref: "#/components/schemas/ConversationWhereInput"
            - type: "null"
    PhraseScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/PhraseScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/PhraseScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/PhraseScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        text:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        textTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        sentence:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        sentenceTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        articleId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        conversationId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    ArticleWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ArticleWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ArticleWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ArticleWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        externalLink:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        phrases:
          $ref: "#/components/schemas/PhraseListRelationFilter"
    ArticleOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        externalLink:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        createdById:
          $ref: "#/components/schemas/SortOrder"
        phrases:
          $ref: "#/components/schemas/PhraseOrderByRelationAggregateInput"
    ArticleWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/ArticleWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ArticleWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ArticleWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        externalLink:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        phrases:
          $ref: "#/components/schemas/PhraseListRelationFilter"
    ArticleScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ArticleScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ArticleScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ArticleScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        externalLink:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    ConversationWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ConversationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ConversationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ConversationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        messages:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        phrase:
          oneOf:
            - $ref: "#/components/schemas/PhraseNullableRelationFilter"
            - $ref: "#/components/schemas/PhraseWhereInput"
            - type: "null"
    ConversationOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        messages:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        phrase:
          $ref: "#/components/schemas/PhraseOrderByWithRelationInput"
    ConversationWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/ConversationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ConversationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ConversationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationWhereInput"
        messages:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        phrase:
          oneOf:
            - $ref: "#/components/schemas/PhraseNullableRelationFilter"
            - $ref: "#/components/schemas/PhraseWhereInput"
            - type: "null"
    ConversationScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ConversationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ConversationScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ConversationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        messages:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    AccountWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
            - type: "null"
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        refresh_token_expires_in:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
            - type: "null"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    AccountOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        type:
          $ref: "#/components/schemas/SortOrder"
        provider:
          $ref: "#/components/schemas/SortOrder"
        providerAccountId:
          $ref: "#/components/schemas/SortOrder"
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        access_token:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        token_type:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        scope:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        id_token:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        session_state:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        refresh_token_expires_in:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    AccountWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        provider_providerAccountId:
          $ref: "#/components/schemas/AccountProviderProviderAccountIdCompoundUniqueInput"
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
            - type: "null"
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        refresh_token_expires_in:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
            - type: "null"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    AccountScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableWithAggregatesFilter"
            - type: integer
            - type: "null"
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        refresh_token_expires_in:
          oneOf:
            - $ref: "#/components/schemas/IntNullableWithAggregatesFilter"
            - type: integer
            - type: "null"
    SessionWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        sessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    SessionOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        sessionToken:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        expires:
          $ref: "#/components/schemas/SortOrder"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    SessionWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    SessionScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        sessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    UserWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        email:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        password:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        accounts:
          $ref: "#/components/schemas/AccountListRelationFilter"
        sessions:
          $ref: "#/components/schemas/SessionListRelationFilter"
    UserOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        email:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        password:
          $ref: "#/components/schemas/SortOrder"
        image:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        accounts:
          $ref: "#/components/schemas/AccountOrderByRelationAggregateInput"
        sessions:
          $ref: "#/components/schemas/SessionOrderByRelationAggregateInput"
    UserWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        password:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        accounts:
          $ref: "#/components/schemas/AccountListRelationFilter"
        sessions:
          $ref: "#/components/schemas/SessionListRelationFilter"
    UserScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        email:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        password:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
    VerificationTokenWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/VerificationTokenWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        identifier:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        token:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    VerificationTokenOrderByWithRelationInput:
      type: object
      properties:
        identifier:
          $ref: "#/components/schemas/SortOrder"
        token:
          $ref: "#/components/schemas/SortOrder"
        expires:
          $ref: "#/components/schemas/SortOrder"
    VerificationTokenWhereUniqueInput:
      type: object
      properties:
        token:
          type: string
        identifier_token:
          $ref: "#/components/schemas/VerificationTokenIdentifierTokenCompoundUniqueInput"
        AND:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/VerificationTokenWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        identifier:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    VerificationTokenScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        identifier:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        token:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    PostCreateInput:
      type: object
      properties:
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        published:
          type: boolean
      required:
        - name
    PostUpdateInput:
      type: object
      properties:
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        published:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    PostCreateManyInput:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        published:
          type: boolean
      required:
        - name
    PostUpdateManyMutationInput:
      type: object
      properties:
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        published:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    PhraseCreateInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
        article:
          $ref: "#/components/schemas/ArticleCreateNestedOneWithoutPhrasesInput"
        conversation:
          $ref: "#/components/schemas/ConversationCreateNestedOneWithoutPhraseInput"
      required:
        - text
        - article
    PhraseUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        article:
          $ref: "#/components/schemas/ArticleUpdateOneRequiredWithoutPhrasesNestedInput"
        conversation:
          $ref: "#/components/schemas/ConversationUpdateOneWithoutPhraseNestedInput"
    PhraseCreateManyInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        articleId:
          type: string
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - text
        - articleId
    PhraseUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    ArticleCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
        phrases:
          $ref: "#/components/schemas/PhraseCreateNestedManyWithoutArticleInput"
      required:
        - name
    ArticleUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        externalLink:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        phrases:
          $ref: "#/components/schemas/PhraseUpdateManyWithoutArticleNestedInput"
    ArticleCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - name
    ArticleUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        externalLink:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    ConversationCreateInput:
      type: object
      properties:
        id:
          type: string
        messages:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        phrase:
          $ref: "#/components/schemas/PhraseCreateNestedOneWithoutConversationInput"
      required:
        - messages
    ConversationUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        messages:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        phrase:
          $ref: "#/components/schemas/PhraseUpdateOneWithoutConversationNestedInput"
    ConversationCreateManyInput:
      type: object
      properties:
        id:
          type: string
        messages:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - messages
    ConversationUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        messages:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    AccountCreateInput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
        refresh_token_expires_in:
          oneOf:
            - type: "null"
            - type: integer
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutAccountsInput"
      required:
        - type
        - provider
        - providerAccountId
        - user
    AccountUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        refresh_token_expires_in:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutAccountsNestedInput"
    AccountCreateManyInput:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
        refresh_token_expires_in:
          oneOf:
            - type: "null"
            - type: integer
      required:
        - userId
        - type
        - provider
        - providerAccountId
    AccountUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        refresh_token_expires_in:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
    SessionCreateInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutSessionsInput"
      required:
        - sessionToken
        - expires
        - user
    SessionUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutSessionsNestedInput"
    SessionCreateManyInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - userId
        - expires
    SessionUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    UserCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          type: string
        image:
          oneOf:
            - type: "null"
            - type: string
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
      required:
        - password
    UserUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
    UserCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          type: string
        image:
          oneOf:
            - type: "null"
            - type: string
      required:
        - password
    UserUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    VerificationTokenCreateInput:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - identifier
        - token
        - expires
    VerificationTokenUpdateInput:
      type: object
      properties:
        identifier:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    VerificationTokenCreateManyInput:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - identifier
        - token
        - expires
    VerificationTokenUpdateManyMutationInput:
      type: object
      properties:
        identifier:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    IntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    StringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    DateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    BoolFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolFilter"
    IntWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedIntFilter"
        _max:
          $ref: "#/components/schemas/NestedIntFilter"
    StringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    DateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    BoolWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolFilter"
    StringNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
            - type: "null"
    ArticleRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/ArticleWhereInput"
        isNot:
          $ref: "#/components/schemas/ArticleWhereInput"
    ConversationNullableRelationFilter:
      type: object
      properties:
        is:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationWhereInput"
        isNot:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationWhereInput"
    SortOrderInput:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/SortOrder"
        nulls:
          $ref: "#/components/schemas/NullsOrder"
      required:
        - sort
    StringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    PhraseListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/PhraseWhereInput"
        some:
          $ref: "#/components/schemas/PhraseWhereInput"
        none:
          $ref: "#/components/schemas/PhraseWhereInput"
    PhraseOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    PhraseNullableRelationFilter:
      type: object
      properties:
        is:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PhraseWhereInput"
        isNot:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PhraseWhereInput"
    IntNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: integer
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
            - type: "null"
    UserRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/UserWhereInput"
        isNot:
          $ref: "#/components/schemas/UserWhereInput"
    AccountProviderProviderAccountIdCompoundUniqueInput:
      type: object
      properties:
        provider:
          type: string
        providerAccountId:
          type: string
      required:
        - provider
        - providerAccountId
    IntNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: integer
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatNullableFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedIntNullableFilter"
    DateTimeNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableFilter"
            - type: "null"
    AccountListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/AccountWhereInput"
        some:
          $ref: "#/components/schemas/AccountWhereInput"
        none:
          $ref: "#/components/schemas/AccountWhereInput"
    SessionListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/SessionWhereInput"
        some:
          $ref: "#/components/schemas/SessionWhereInput"
        none:
          $ref: "#/components/schemas/SessionWhereInput"
    AccountOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    SessionOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    DateTimeNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    VerificationTokenIdentifierTokenCompoundUniqueInput:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
      required:
        - identifier
        - token
    StringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
    DateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
          format: date-time
    BoolFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: boolean
    ArticleCreateNestedOneWithoutPhrasesInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ArticleCreateWithoutPhrasesInput"
            - $ref: "#/components/schemas/ArticleUncheckedCreateWithoutPhrasesInput"
        connectOrCreate:
          $ref: "#/components/schemas/ArticleCreateOrConnectWithoutPhrasesInput"
        connect:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
    ConversationCreateNestedOneWithoutPhraseInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ConversationCreateWithoutPhraseInput"
            - $ref: "#/components/schemas/ConversationUncheckedCreateWithoutPhraseInput"
        connectOrCreate:
          $ref: "#/components/schemas/ConversationCreateOrConnectWithoutPhraseInput"
        connect:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
    NullableStringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          oneOf:
            - type: "null"
            - type: string
    ArticleUpdateOneRequiredWithoutPhrasesNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ArticleCreateWithoutPhrasesInput"
            - $ref: "#/components/schemas/ArticleUncheckedCreateWithoutPhrasesInput"
        connectOrCreate:
          $ref: "#/components/schemas/ArticleCreateOrConnectWithoutPhrasesInput"
        upsert:
          $ref: "#/components/schemas/ArticleUpsertWithoutPhrasesInput"
        connect:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ArticleUpdateToOneWithWhereWithoutPhrasesInput"
            - $ref: "#/components/schemas/ArticleUpdateWithoutPhrasesInput"
            - $ref: "#/components/schemas/ArticleUncheckedUpdateWithoutPhrasesInput"
    ConversationUpdateOneWithoutPhraseNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ConversationCreateWithoutPhraseInput"
            - $ref: "#/components/schemas/ConversationUncheckedCreateWithoutPhraseInput"
        connectOrCreate:
          $ref: "#/components/schemas/ConversationCreateOrConnectWithoutPhraseInput"
        upsert:
          $ref: "#/components/schemas/ConversationUpsertWithoutPhraseInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ConversationWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ConversationWhereInput"
        connect:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ConversationUpdateToOneWithWhereWithoutPhraseInput"
            - $ref: "#/components/schemas/ConversationUpdateWithoutPhraseInput"
            - $ref: "#/components/schemas/ConversationUncheckedUpdateWithoutPhraseInput"
    PhraseCreateNestedManyWithoutArticleInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/PhraseCreateWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseCreateWithoutArticleInput"
            - $ref: "#/components/schemas/PhraseUncheckedCreateWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseUncheckedCreateWithoutArticleInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/PhraseCreateOrConnectWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseCreateOrConnectWithoutArticleInput"
        createMany:
          $ref: "#/components/schemas/PhraseCreateManyArticleInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/PhraseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseWhereUniqueInput"
    PhraseUpdateManyWithoutArticleNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/PhraseCreateWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseCreateWithoutArticleInput"
            - $ref: "#/components/schemas/PhraseUncheckedCreateWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseUncheckedCreateWithoutArticleInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/PhraseCreateOrConnectWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseCreateOrConnectWithoutArticleInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/PhraseUpsertWithWhereUniqueWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseUpsertWithWhereUniqueWithoutArticleInput"
        createMany:
          $ref: "#/components/schemas/PhraseCreateManyArticleInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/PhraseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/PhraseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/PhraseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/PhraseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/PhraseUpdateWithWhereUniqueWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseUpdateWithWhereUniqueWithoutArticleInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/PhraseUpdateManyWithWhereWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseUpdateManyWithWhereWithoutArticleInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/PhraseScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseScalarWhereInput"
    PhraseCreateNestedOneWithoutConversationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/PhraseCreateWithoutConversationInput"
            - $ref: "#/components/schemas/PhraseUncheckedCreateWithoutConversationInput"
        connectOrCreate:
          $ref: "#/components/schemas/PhraseCreateOrConnectWithoutConversationInput"
        connect:
          $ref: "#/components/schemas/PhraseWhereUniqueInput"
    PhraseUpdateOneWithoutConversationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/PhraseCreateWithoutConversationInput"
            - $ref: "#/components/schemas/PhraseUncheckedCreateWithoutConversationInput"
        connectOrCreate:
          $ref: "#/components/schemas/PhraseCreateOrConnectWithoutConversationInput"
        upsert:
          $ref: "#/components/schemas/PhraseUpsertWithoutConversationInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/PhraseWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/PhraseWhereInput"
        connect:
          $ref: "#/components/schemas/PhraseWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/PhraseUpdateToOneWithWhereWithoutConversationInput"
            - $ref: "#/components/schemas/PhraseUpdateWithoutConversationInput"
            - $ref: "#/components/schemas/PhraseUncheckedUpdateWithoutConversationInput"
    UserCreateNestedOneWithoutAccountsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutAccountsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    NullableIntFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          oneOf:
            - type: "null"
            - type: integer
        increment:
          type: integer
        decrement:
          type: integer
        multiply:
          type: integer
        divide:
          type: integer
    UserUpdateOneRequiredWithoutAccountsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutAccountsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutAccountsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
    UserCreateNestedOneWithoutSessionsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSessionsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    UserUpdateOneRequiredWithoutSessionsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSessionsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutSessionsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
    AccountCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
    SessionCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
    AccountUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
    SessionUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
    NullableDateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    AccountUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
    SessionUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
    AccountUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
    SessionUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
    NestedIntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    NestedStringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    NestedDateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedBoolFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolFilter"
    NestedIntWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedIntFilter"
        _max:
          $ref: "#/components/schemas/NestedIntFilter"
    NestedFloatFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatFilter"
    NestedStringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    NestedDateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedBoolWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolFilter"
    NestedStringNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
            - type: "null"
    NestedStringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    NestedIntNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: integer
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
            - type: "null"
    NestedIntNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: integer
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatNullableFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedIntNullableFilter"
    NestedFloatNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: number
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: number
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatNullableFilter"
            - type: "null"
    NestedDateTimeNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableFilter"
            - type: "null"
    NestedDateTimeNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    ArticleCreateWithoutPhrasesInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - name
    ArticleUncheckedCreateWithoutPhrasesInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - name
    ArticleCreateOrConnectWithoutPhrasesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ArticleCreateWithoutPhrasesInput"
            - $ref: "#/components/schemas/ArticleUncheckedCreateWithoutPhrasesInput"
      required:
        - where
        - create
    ConversationCreateWithoutPhraseInput:
      type: object
      properties:
        id:
          type: string
        messages:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - messages
    ConversationUncheckedCreateWithoutPhraseInput:
      type: object
      properties:
        id:
          type: string
        messages:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - messages
    ConversationCreateOrConnectWithoutPhraseInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ConversationCreateWithoutPhraseInput"
            - $ref: "#/components/schemas/ConversationUncheckedCreateWithoutPhraseInput"
      required:
        - where
        - create
    ArticleUpsertWithoutPhrasesInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/ArticleUpdateWithoutPhrasesInput"
            - $ref: "#/components/schemas/ArticleUncheckedUpdateWithoutPhrasesInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ArticleCreateWithoutPhrasesInput"
            - $ref: "#/components/schemas/ArticleUncheckedCreateWithoutPhrasesInput"
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
      required:
        - update
        - create
    ArticleUpdateToOneWithWhereWithoutPhrasesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ArticleUpdateWithoutPhrasesInput"
            - $ref: "#/components/schemas/ArticleUncheckedUpdateWithoutPhrasesInput"
      required:
        - data
    ArticleUpdateWithoutPhrasesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        externalLink:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    ArticleUncheckedUpdateWithoutPhrasesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        externalLink:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    ConversationUpsertWithoutPhraseInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/ConversationUpdateWithoutPhraseInput"
            - $ref: "#/components/schemas/ConversationUncheckedUpdateWithoutPhraseInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ConversationCreateWithoutPhraseInput"
            - $ref: "#/components/schemas/ConversationUncheckedCreateWithoutPhraseInput"
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
      required:
        - update
        - create
    ConversationUpdateToOneWithWhereWithoutPhraseInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ConversationUpdateWithoutPhraseInput"
            - $ref: "#/components/schemas/ConversationUncheckedUpdateWithoutPhraseInput"
      required:
        - data
    ConversationUpdateWithoutPhraseInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        messages:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ConversationUncheckedUpdateWithoutPhraseInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        messages:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    PhraseCreateWithoutArticleInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
        conversation:
          $ref: "#/components/schemas/ConversationCreateNestedOneWithoutPhraseInput"
      required:
        - text
    PhraseUncheckedCreateWithoutArticleInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - text
    PhraseCreateOrConnectWithoutArticleInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/PhraseWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/PhraseCreateWithoutArticleInput"
            - $ref: "#/components/schemas/PhraseUncheckedCreateWithoutArticleInput"
      required:
        - where
        - create
    PhraseCreateManyArticleInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/PhraseCreateManyArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseCreateManyArticleInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    PhraseUpsertWithWhereUniqueWithoutArticleInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/PhraseWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/PhraseUpdateWithoutArticleInput"
            - $ref: "#/components/schemas/PhraseUncheckedUpdateWithoutArticleInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/PhraseCreateWithoutArticleInput"
            - $ref: "#/components/schemas/PhraseUncheckedCreateWithoutArticleInput"
      required:
        - where
        - update
        - create
    PhraseUpdateWithWhereUniqueWithoutArticleInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/PhraseWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/PhraseUpdateWithoutArticleInput"
            - $ref: "#/components/schemas/PhraseUncheckedUpdateWithoutArticleInput"
      required:
        - where
        - data
    PhraseUpdateManyWithWhereWithoutArticleInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/PhraseScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/PhraseUpdateManyMutationInput"
            - $ref: "#/components/schemas/PhraseUncheckedUpdateManyWithoutArticleInput"
      required:
        - where
        - data
    PhraseScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/PhraseScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/PhraseScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/PhraseScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        text:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        textTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        sentence:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        sentenceTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        articleId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        conversationId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
    PhraseCreateWithoutConversationInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
        article:
          $ref: "#/components/schemas/ArticleCreateNestedOneWithoutPhrasesInput"
      required:
        - text
        - article
    PhraseUncheckedCreateWithoutConversationInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        articleId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - text
        - articleId
    PhraseCreateOrConnectWithoutConversationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/PhraseWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/PhraseCreateWithoutConversationInput"
            - $ref: "#/components/schemas/PhraseUncheckedCreateWithoutConversationInput"
      required:
        - where
        - create
    PhraseUpsertWithoutConversationInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/PhraseUpdateWithoutConversationInput"
            - $ref: "#/components/schemas/PhraseUncheckedUpdateWithoutConversationInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/PhraseCreateWithoutConversationInput"
            - $ref: "#/components/schemas/PhraseUncheckedCreateWithoutConversationInput"
        where:
          $ref: "#/components/schemas/PhraseWhereInput"
      required:
        - update
        - create
    PhraseUpdateToOneWithWhereWithoutConversationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/PhraseWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/PhraseUpdateWithoutConversationInput"
            - $ref: "#/components/schemas/PhraseUncheckedUpdateWithoutConversationInput"
      required:
        - data
    PhraseUpdateWithoutConversationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        article:
          $ref: "#/components/schemas/ArticleUpdateOneRequiredWithoutPhrasesNestedInput"
    PhraseUncheckedUpdateWithoutConversationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        articleId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    UserCreateWithoutAccountsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          type: string
        image:
          oneOf:
            - type: "null"
            - type: string
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
      required:
        - password
    UserUncheckedCreateWithoutAccountsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          type: string
        image:
          oneOf:
            - type: "null"
            - type: string
        sessions:
          $ref: "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
      required:
        - password
    UserCreateOrConnectWithoutAccountsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
      required:
        - where
        - create
    UserUpsertWithoutAccountsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutAccountsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
      required:
        - data
    UserUpdateWithoutAccountsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutAccountsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
    UserCreateWithoutSessionsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          type: string
        image:
          oneOf:
            - type: "null"
            - type: string
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
      required:
        - password
    UserUncheckedCreateWithoutSessionsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          type: string
        image:
          oneOf:
            - type: "null"
            - type: string
        accounts:
          $ref: "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
      required:
        - password
    UserCreateOrConnectWithoutSessionsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
      required:
        - where
        - create
    UserUpsertWithoutSessionsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutSessionsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
      required:
        - data
    UserUpdateWithoutSessionsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutSessionsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        accounts:
          $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
    AccountCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
        refresh_token_expires_in:
          oneOf:
            - type: "null"
            - type: integer
      required:
        - type
        - provider
        - providerAccountId
    AccountUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
        refresh_token_expires_in:
          oneOf:
            - type: "null"
            - type: integer
      required:
        - type
        - provider
        - providerAccountId
    AccountCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    AccountCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    SessionCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - expires
    SessionUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - expires
    SessionCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    SessionCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    AccountUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    AccountUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    AccountUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateManyMutationInput"
            - $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    AccountScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
            - type: "null"
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        refresh_token_expires_in:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
            - type: "null"
    SessionUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    SessionUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    SessionUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateManyMutationInput"
            - $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    SessionScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        sessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    PhraseCreateManyArticleInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - text
    PhraseUpdateWithoutArticleInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        conversation:
          $ref: "#/components/schemas/ConversationUpdateOneWithoutPhraseNestedInput"
    PhraseUncheckedUpdateWithoutArticleInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        conversationId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    PhraseUncheckedUpdateManyWithoutArticleInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        conversationId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    AccountCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
        refresh_token_expires_in:
          oneOf:
            - type: "null"
            - type: integer
      required:
        - type
        - provider
        - providerAccountId
    SessionCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - expires
    AccountUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        refresh_token_expires_in:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
    AccountUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        refresh_token_expires_in:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
    AccountUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        refresh_token_expires_in:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
    SessionUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    SessionUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    SessionUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    PhraseArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/PhraseSelect"
        include:
          $ref: "#/components/schemas/PhraseInclude"
    ArticleArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
    ConversationArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
    UserArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
    PhraseInclude:
      type: object
      properties:
        article:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleArgs"
        conversation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ConversationArgs"
    ArticleInclude:
      type: object
      properties:
        phrases:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/PhraseFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleCountOutputTypeArgs"
    ConversationInclude:
      type: object
      properties:
        phrase:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/PhraseArgs"
    AccountInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    SessionInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    UserInclude:
      type: object
      properties:
        accounts:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountFindManyArgs"
        sessions:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeArgs"
    ArticleCountOutputTypeSelect:
      type: object
      properties:
        phrases:
          type: boolean
    UserCountOutputTypeSelect:
      type: object
      properties:
        accounts:
          type: boolean
        sessions:
          type: boolean
    ArticleCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ArticleCountOutputTypeSelect"
    UserCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserCountOutputTypeSelect"
    PostSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        published:
          type: boolean
    PhraseSelect:
      type: object
      properties:
        id:
          type: boolean
        text:
          type: boolean
        textTranslation:
          type: boolean
        sentence:
          type: boolean
        sentenceTranslation:
          type: boolean
        article:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleArgs"
        articleId:
          type: boolean
        conversation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ConversationArgs"
        conversationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
    ArticleSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        externalLink:
          type: boolean
        phrases:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/PhraseFindManyArgs"
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleCountOutputTypeArgs"
    ConversationSelect:
      type: object
      properties:
        id:
          type: boolean
        messages:
          type: boolean
        phrase:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/PhraseArgs"
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    AccountSelect:
      type: object
      properties:
        id:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        refresh_token_expires_in:
          type: boolean
    SessionSelect:
      type: object
      properties:
        id:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    UserSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        password:
          type: boolean
        image:
          type: boolean
        accounts:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountFindManyArgs"
        sessions:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeArgs"
    VerificationTokenSelect:
      type: object
      properties:
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
    PostCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        published:
          type: boolean
        _all:
          type: boolean
    PostAvgAggregateInput:
      type: object
      properties:
        id:
          type: boolean
    PostSumAggregateInput:
      type: object
      properties:
        id:
          type: boolean
    PostMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        published:
          type: boolean
    PostMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        published:
          type: boolean
    PhraseCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        text:
          type: boolean
        textTranslation:
          type: boolean
        sentence:
          type: boolean
        sentenceTranslation:
          type: boolean
        articleId:
          type: boolean
        conversationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
        _all:
          type: boolean
    PhraseMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        text:
          type: boolean
        textTranslation:
          type: boolean
        sentence:
          type: boolean
        sentenceTranslation:
          type: boolean
        articleId:
          type: boolean
        conversationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
    PhraseMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        text:
          type: boolean
        textTranslation:
          type: boolean
        sentence:
          type: boolean
        sentenceTranslation:
          type: boolean
        articleId:
          type: boolean
        conversationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
    ArticleCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        externalLink:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
        _all:
          type: boolean
    ArticleMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        externalLink:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
    ArticleMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        externalLink:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
    ConversationCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        messages:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _all:
          type: boolean
    ConversationMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        messages:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    ConversationMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        messages:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    AccountCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
        refresh_token_expires_in:
          type: boolean
        _all:
          type: boolean
    AccountAvgAggregateInput:
      type: object
      properties:
        expires_at:
          type: boolean
        refresh_token_expires_in:
          type: boolean
    AccountSumAggregateInput:
      type: object
      properties:
        expires_at:
          type: boolean
        refresh_token_expires_in:
          type: boolean
    AccountMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
        refresh_token_expires_in:
          type: boolean
    AccountMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
        refresh_token_expires_in:
          type: boolean
    SessionCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
        _all:
          type: boolean
    SessionMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
    SessionMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
    UserCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        password:
          type: boolean
        image:
          type: boolean
        _all:
          type: boolean
    UserMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        password:
          type: boolean
        image:
          type: boolean
    UserMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        password:
          type: boolean
        image:
          type: boolean
    VerificationTokenCountAggregateInput:
      type: object
      properties:
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
        _all:
          type: boolean
    VerificationTokenMinAggregateInput:
      type: object
      properties:
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
    VerificationTokenMaxAggregateInput:
      type: object
      properties:
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
    AggregatePost:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PostCountAggregateOutputType"
        _avg:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PostAvgAggregateOutputType"
        _sum:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PostSumAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PostMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PostMaxAggregateOutputType"
    PostGroupByOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        published:
          type: boolean
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PostCountAggregateOutputType"
        _avg:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PostAvgAggregateOutputType"
        _sum:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PostSumAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PostMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PostMaxAggregateOutputType"
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - published
    AggregatePhrase:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PhraseCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PhraseMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PhraseMaxAggregateOutputType"
    PhraseGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        articleId:
          type: string
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PhraseCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PhraseMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/PhraseMaxAggregateOutputType"
      required:
        - id
        - text
        - articleId
        - createdAt
        - updatedAt
        - createdById
    AggregateArticle:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleMaxAggregateOutputType"
    ArticleGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleMaxAggregateOutputType"
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - createdById
    AggregateConversation:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationMaxAggregateOutputType"
    ConversationGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        messages:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationMaxAggregateOutputType"
      required:
        - id
        - messages
        - createdAt
        - updatedAt
    AggregateAccount:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountCountAggregateOutputType"
        _avg:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountAvgAggregateOutputType"
        _sum:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountSumAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountMaxAggregateOutputType"
    AccountGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
        refresh_token_expires_in:
          oneOf:
            - type: "null"
            - type: integer
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountCountAggregateOutputType"
        _avg:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountAvgAggregateOutputType"
        _sum:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountSumAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountMaxAggregateOutputType"
      required:
        - id
        - userId
        - type
        - provider
        - providerAccountId
    AggregateSession:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SessionCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SessionMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SessionMaxAggregateOutputType"
    SessionGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SessionCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SessionMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SessionMaxAggregateOutputType"
      required:
        - id
        - sessionToken
        - userId
        - expires
    AggregateUser:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMaxAggregateOutputType"
    UserGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          type: string
        image:
          oneOf:
            - type: "null"
            - type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMaxAggregateOutputType"
      required:
        - id
        - password
    AggregateVerificationToken:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/VerificationTokenCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/VerificationTokenMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/VerificationTokenMaxAggregateOutputType"
    VerificationTokenGroupByOutputType:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/VerificationTokenCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/VerificationTokenMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/VerificationTokenMaxAggregateOutputType"
      required:
        - identifier
        - token
        - expires
    PostCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        published:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - published
        - _all
    PostAvgAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: number
    PostSumAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: integer
    PostMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: integer
        name:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        published:
          oneOf:
            - type: "null"
            - type: boolean
    PostMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: integer
        name:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        published:
          oneOf:
            - type: "null"
            - type: boolean
    PhraseCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        text:
          type: integer
        textTranslation:
          type: integer
        sentence:
          type: integer
        sentenceTranslation:
          type: integer
        articleId:
          type: integer
        conversationId:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        createdById:
          type: integer
        _all:
          type: integer
      required:
        - id
        - text
        - textTranslation
        - sentence
        - sentenceTranslation
        - articleId
        - conversationId
        - createdAt
        - updatedAt
        - createdById
        - _all
    PhraseMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        text:
          oneOf:
            - type: "null"
            - type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        articleId:
          oneOf:
            - type: "null"
            - type: string
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
    PhraseMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        text:
          oneOf:
            - type: "null"
            - type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        articleId:
          oneOf:
            - type: "null"
            - type: string
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
    ArticleCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        externalLink:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        createdById:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - externalLink
        - createdAt
        - updatedAt
        - createdById
        - _all
    ArticleMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
    ArticleMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
    ConversationCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        messages:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        _all:
          type: integer
      required:
        - id
        - messages
        - createdAt
        - updatedAt
        - _all
    ConversationMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        messages:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    ConversationMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        messages:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    AccountCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        type:
          type: integer
        provider:
          type: integer
        providerAccountId:
          type: integer
        refresh_token:
          type: integer
        access_token:
          type: integer
        expires_at:
          type: integer
        token_type:
          type: integer
        scope:
          type: integer
        id_token:
          type: integer
        session_state:
          type: integer
        refresh_token_expires_in:
          type: integer
        _all:
          type: integer
      required:
        - id
        - userId
        - type
        - provider
        - providerAccountId
        - refresh_token
        - access_token
        - expires_at
        - token_type
        - scope
        - id_token
        - session_state
        - refresh_token_expires_in
        - _all
    AccountAvgAggregateOutputType:
      type: object
      properties:
        expires_at:
          oneOf:
            - type: "null"
            - type: number
        refresh_token_expires_in:
          oneOf:
            - type: "null"
            - type: number
    AccountSumAggregateOutputType:
      type: object
      properties:
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        refresh_token_expires_in:
          oneOf:
            - type: "null"
            - type: integer
    AccountMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        userId:
          oneOf:
            - type: "null"
            - type: string
        type:
          oneOf:
            - type: "null"
            - type: string
        provider:
          oneOf:
            - type: "null"
            - type: string
        providerAccountId:
          oneOf:
            - type: "null"
            - type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
        refresh_token_expires_in:
          oneOf:
            - type: "null"
            - type: integer
    AccountMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        userId:
          oneOf:
            - type: "null"
            - type: string
        type:
          oneOf:
            - type: "null"
            - type: string
        provider:
          oneOf:
            - type: "null"
            - type: string
        providerAccountId:
          oneOf:
            - type: "null"
            - type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
        refresh_token_expires_in:
          oneOf:
            - type: "null"
            - type: integer
    SessionCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        sessionToken:
          type: integer
        userId:
          type: integer
        expires:
          type: integer
        _all:
          type: integer
      required:
        - id
        - sessionToken
        - userId
        - expires
        - _all
    SessionMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        sessionToken:
          oneOf:
            - type: "null"
            - type: string
        userId:
          oneOf:
            - type: "null"
            - type: string
        expires:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    SessionMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        sessionToken:
          oneOf:
            - type: "null"
            - type: string
        userId:
          oneOf:
            - type: "null"
            - type: string
        expires:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    UserCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        email:
          type: integer
        emailVerified:
          type: integer
        password:
          type: integer
        image:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - email
        - emailVerified
        - password
        - image
        - _all
    UserMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          oneOf:
            - type: "null"
            - type: string
        image:
          oneOf:
            - type: "null"
            - type: string
    UserMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          oneOf:
            - type: "null"
            - type: string
        image:
          oneOf:
            - type: "null"
            - type: string
    VerificationTokenCountAggregateOutputType:
      type: object
      properties:
        identifier:
          type: integer
        token:
          type: integer
        expires:
          type: integer
        _all:
          type: integer
      required:
        - identifier
        - token
        - expires
        - _all
    VerificationTokenMinAggregateOutputType:
      type: object
      properties:
        identifier:
          oneOf:
            - type: "null"
            - type: string
        token:
          oneOf:
            - type: "null"
            - type: string
        expires:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    VerificationTokenMaxAggregateOutputType:
      type: object
      properties:
        identifier:
          oneOf:
            - type: "null"
            - type: string
        token:
          oneOf:
            - type: "null"
            - type: string
        expires:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    _Meta:
      type: object
      description: Meta information about the request or response
      properties:
        serialization:
          description: Serialization metadata
      additionalProperties: true
    _Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - message
          properties:
            prisma:
              type: boolean
              description: Indicates if the error occurred during a Prisma call
            rejectedByPolicy:
              type: boolean
              description: Indicates if the error was due to rejection by a policy
            code:
              type: string
              description: Prisma error code. Only available when "prisma" field is true.
            message:
              type: string
              description: Error message
            reason:
              type: string
              description: Detailed error reason
            zodErrors:
              type: object
              additionalProperties: true
              description: Zod validation errors if the error is due to data validation
                failure
          additionalProperties: true
    BatchPayload:
      type: object
      properties:
        count:
          type: integer
    PostCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/PostSelect"
        data:
          $ref: "#/components/schemas/PostCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PostCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/PostCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/PostCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    PostFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/PostSelect"
        where:
          $ref: "#/components/schemas/PostWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PostFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/PostSelect"
        where:
          $ref: "#/components/schemas/PostWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PostFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/PostSelect"
        where:
          $ref: "#/components/schemas/PostWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PostUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/PostSelect"
        where:
          $ref: "#/components/schemas/PostWhereUniqueInput"
        data:
          $ref: "#/components/schemas/PostUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PostUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/PostWhereInput"
        data:
          $ref: "#/components/schemas/PostUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PostUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/PostSelect"
        where:
          $ref: "#/components/schemas/PostWhereUniqueInput"
        create:
          $ref: "#/components/schemas/PostCreateInput"
        update:
          $ref: "#/components/schemas/PostUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PostDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/PostSelect"
        where:
          $ref: "#/components/schemas/PostWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PostDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/PostWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PostCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/PostSelect"
        where:
          $ref: "#/components/schemas/PostWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PostAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/PostWhereInput"
        orderBy:
          $ref: "#/components/schemas/PostOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/PostWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/PostCountAggregateInput"
        _min:
          $ref: "#/components/schemas/PostMinAggregateInput"
        _max:
          $ref: "#/components/schemas/PostMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/PostSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/PostAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PostGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/PostWhereInput"
        orderBy:
          $ref: "#/components/schemas/PostOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/PostScalarFieldEnum"
        having:
          $ref: "#/components/schemas/PostScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/PostCountAggregateInput"
        _min:
          $ref: "#/components/schemas/PostMinAggregateInput"
        _max:
          $ref: "#/components/schemas/PostMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/PostSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/PostAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/PhraseSelect"
        include:
          $ref: "#/components/schemas/PhraseInclude"
        data:
          $ref: "#/components/schemas/PhraseCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/PhraseCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/PhraseCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/PhraseSelect"
        include:
          $ref: "#/components/schemas/PhraseInclude"
        where:
          $ref: "#/components/schemas/PhraseWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/PhraseSelect"
        include:
          $ref: "#/components/schemas/PhraseInclude"
        where:
          $ref: "#/components/schemas/PhraseWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/PhraseSelect"
        include:
          $ref: "#/components/schemas/PhraseInclude"
        where:
          $ref: "#/components/schemas/PhraseWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/PhraseSelect"
        include:
          $ref: "#/components/schemas/PhraseInclude"
        where:
          $ref: "#/components/schemas/PhraseWhereUniqueInput"
        data:
          $ref: "#/components/schemas/PhraseUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/PhraseWhereInput"
        data:
          $ref: "#/components/schemas/PhraseUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/PhraseSelect"
        include:
          $ref: "#/components/schemas/PhraseInclude"
        where:
          $ref: "#/components/schemas/PhraseWhereUniqueInput"
        create:
          $ref: "#/components/schemas/PhraseCreateInput"
        update:
          $ref: "#/components/schemas/PhraseUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/PhraseSelect"
        include:
          $ref: "#/components/schemas/PhraseInclude"
        where:
          $ref: "#/components/schemas/PhraseWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/PhraseWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/PhraseSelect"
        where:
          $ref: "#/components/schemas/PhraseWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/PhraseWhereInput"
        orderBy:
          $ref: "#/components/schemas/PhraseOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/PhraseWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/PhraseCountAggregateInput"
        _min:
          $ref: "#/components/schemas/PhraseMinAggregateInput"
        _max:
          $ref: "#/components/schemas/PhraseMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    PhraseGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/PhraseWhereInput"
        orderBy:
          $ref: "#/components/schemas/PhraseOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/PhraseScalarFieldEnum"
        having:
          $ref: "#/components/schemas/PhraseScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/PhraseCountAggregateInput"
        _min:
          $ref: "#/components/schemas/PhraseMinAggregateInput"
        _max:
          $ref: "#/components/schemas/PhraseMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        data:
          $ref: "#/components/schemas/ArticleCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ArticleCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        where:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        where:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        data:
          $ref: "#/components/schemas/ArticleUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        data:
          $ref: "#/components/schemas/ArticleUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        where:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        create:
          $ref: "#/components/schemas/ArticleCreateInput"
        update:
          $ref: "#/components/schemas/ArticleUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        where:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        orderBy:
          $ref: "#/components/schemas/ArticleOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ArticleMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ArticleMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        orderBy:
          $ref: "#/components/schemas/ArticleOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/ArticleScalarFieldEnum"
        having:
          $ref: "#/components/schemas/ArticleScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ArticleMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ArticleMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        data:
          $ref: "#/components/schemas/ConversationCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ConversationCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        where:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        where:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        data:
          $ref: "#/components/schemas/ConversationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        data:
          $ref: "#/components/schemas/ConversationUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        where:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        create:
          $ref: "#/components/schemas/ConversationCreateInput"
        update:
          $ref: "#/components/schemas/ConversationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        where:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        orderBy:
          $ref: "#/components/schemas/ConversationOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ConversationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ConversationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ConversationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        orderBy:
          $ref: "#/components/schemas/ConversationOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/ConversationScalarFieldEnum"
        having:
          $ref: "#/components/schemas/ConversationScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ConversationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ConversationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ConversationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        data:
          $ref: "#/components/schemas/AccountCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        data:
          $ref: "#/components/schemas/AccountUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        data:
          $ref: "#/components/schemas/AccountUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        create:
          $ref: "#/components/schemas/AccountCreateInput"
        update:
          $ref: "#/components/schemas/AccountUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        orderBy:
          $ref: "#/components/schemas/AccountOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountCountAggregateInput"
        _min:
          $ref: "#/components/schemas/AccountMinAggregateInput"
        _max:
          $ref: "#/components/schemas/AccountMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/AccountSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/AccountAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        orderBy:
          $ref: "#/components/schemas/AccountOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/AccountScalarFieldEnum"
        having:
          $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountCountAggregateInput"
        _min:
          $ref: "#/components/schemas/AccountMinAggregateInput"
        _max:
          $ref: "#/components/schemas/AccountMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/AccountSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/AccountAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        data:
          $ref: "#/components/schemas/SessionCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        data:
          $ref: "#/components/schemas/SessionUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        data:
          $ref: "#/components/schemas/SessionUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        create:
          $ref: "#/components/schemas/SessionCreateInput"
        update:
          $ref: "#/components/schemas/SessionUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        orderBy:
          $ref: "#/components/schemas/SessionOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SessionMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SessionMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        orderBy:
          $ref: "#/components/schemas/SessionOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/SessionScalarFieldEnum"
        having:
          $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SessionMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SessionMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        data:
          $ref: "#/components/schemas/UserCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/UserCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        data:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          $ref: "#/components/schemas/UserUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          $ref: "#/components/schemas/UserCreateInput"
        update:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/UserScalarFieldEnum"
        having:
          $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        data:
          $ref: "#/components/schemas/VerificationTokenCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        data:
          $ref: "#/components/schemas/VerificationTokenUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        data:
          $ref: "#/components/schemas/VerificationTokenUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        create:
          $ref: "#/components/schemas/VerificationTokenCreateInput"
        update:
          $ref: "#/components/schemas/VerificationTokenUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        orderBy:
          $ref: "#/components/schemas/VerificationTokenOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/VerificationTokenCountAggregateInput"
        _min:
          $ref: "#/components/schemas/VerificationTokenMinAggregateInput"
        _max:
          $ref: "#/components/schemas/VerificationTokenMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        orderBy:
          $ref: "#/components/schemas/VerificationTokenOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/VerificationTokenScalarFieldEnum"
        having:
          $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/VerificationTokenCountAggregateInput"
        _min:
          $ref: "#/components/schemas/VerificationTokenMinAggregateInput"
        _max:
          $ref: "#/components/schemas/VerificationTokenMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
paths:
  /api/model/post/create:
    post:
      operationId: createPost
      description: Create a new Post
      tags:
        - post
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Post"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCreateArgs"
  /api/model/post/createMany:
    post:
      operationId: createManyPost
      description: Create several Post
      tags:
        - post
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCreateManyArgs"
  /api/model/post/findUnique:
    get:
      operationId: findUniquePost
      description: Find one unique Post
      tags:
        - post
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Post"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/post/findFirst:
    get:
      operationId: findFirstPost
      description: Find the first Post matching the given condition
      tags:
        - post
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Post"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/post/findMany:
    get:
      operationId: findManyPost
      description: Find a list of Post
      tags:
        - post
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Post"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/post/update:
    patch:
      operationId: updatePost
      description: Update a Post
      tags:
        - post
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Post"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostUpdateArgs"
  /api/model/post/updateMany:
    patch:
      operationId: updateManyPost
      description: Update Posts matching the given condition
      tags:
        - post
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostUpdateManyArgs"
  /api/model/post/upsert:
    post:
      operationId: upsertPost
      description: Upsert a Post
      tags:
        - post
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Post"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostUpsertArgs"
  /api/model/post/delete:
    delete:
      operationId: deletePost
      description: Delete one unique Post
      tags:
        - post
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Post"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/post/deleteMany:
    delete:
      operationId: deleteManyPost
      description: Delete Posts matching the given condition
      tags:
        - post
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/post/count:
    get:
      operationId: countPost
      description: Find a list of Post
      tags:
        - post
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/PostCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/post/aggregate:
    get:
      operationId: aggregatePost
      description: Aggregate Posts
      tags:
        - post
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregatePost"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/post/groupBy:
    get:
      operationId: groupByPost
      description: Group Posts by fields
      tags:
        - post
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PostGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/phrase/create:
    post:
      operationId: createPhrase
      description: Create a new Phrase
      tags:
        - phrase
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Phrase"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PhraseCreateArgs"
  /api/model/phrase/createMany:
    post:
      operationId: createManyPhrase
      description: Create several Phrase
      tags:
        - phrase
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PhraseCreateManyArgs"
  /api/model/phrase/findUnique:
    get:
      operationId: findUniquePhrase
      description: Find one unique Phrase
      tags:
        - phrase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Phrase"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhraseFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/phrase/findFirst:
    get:
      operationId: findFirstPhrase
      description: Find the first Phrase matching the given condition
      tags:
        - phrase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Phrase"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhraseFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/phrase/findMany:
    get:
      operationId: findManyPhrase
      description: Find a list of Phrase
      tags:
        - phrase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Phrase"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhraseFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/phrase/update:
    patch:
      operationId: updatePhrase
      description: Update a Phrase
      tags:
        - phrase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Phrase"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PhraseUpdateArgs"
  /api/model/phrase/updateMany:
    patch:
      operationId: updateManyPhrase
      description: Update Phrases matching the given condition
      tags:
        - phrase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PhraseUpdateManyArgs"
  /api/model/phrase/upsert:
    post:
      operationId: upsertPhrase
      description: Upsert a Phrase
      tags:
        - phrase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Phrase"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PhraseUpsertArgs"
  /api/model/phrase/delete:
    delete:
      operationId: deletePhrase
      description: Delete one unique Phrase
      tags:
        - phrase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Phrase"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhraseDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/phrase/deleteMany:
    delete:
      operationId: deleteManyPhrase
      description: Delete Phrases matching the given condition
      tags:
        - phrase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhraseDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/phrase/count:
    get:
      operationId: countPhrase
      description: Find a list of Phrase
      tags:
        - phrase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/PhraseCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhraseCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/phrase/aggregate:
    get:
      operationId: aggregatePhrase
      description: Aggregate Phrases
      tags:
        - phrase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregatePhrase"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhraseAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/phrase/groupBy:
    get:
      operationId: groupByPhrase
      description: Group Phrases by fields
      tags:
        - phrase
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PhraseGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhraseGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/article/create:
    post:
      operationId: createArticle
      description: Create a new Article
      tags:
        - article
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleCreateArgs"
  /api/model/article/createMany:
    post:
      operationId: createManyArticle
      description: Create several Article
      tags:
        - article
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleCreateManyArgs"
  /api/model/article/findUnique:
    get:
      operationId: findUniqueArticle
      description: Find one unique Article
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/article/findFirst:
    get:
      operationId: findFirstArticle
      description: Find the first Article matching the given condition
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/article/findMany:
    get:
      operationId: findManyArticle
      description: Find a list of Article
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/article/update:
    patch:
      operationId: updateArticle
      description: Update a Article
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleUpdateArgs"
  /api/model/article/updateMany:
    patch:
      operationId: updateManyArticle
      description: Update Articles matching the given condition
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleUpdateManyArgs"
  /api/model/article/upsert:
    post:
      operationId: upsertArticle
      description: Upsert a Article
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleUpsertArgs"
  /api/model/article/delete:
    delete:
      operationId: deleteArticle
      description: Delete one unique Article
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/article/deleteMany:
    delete:
      operationId: deleteManyArticle
      description: Delete Articles matching the given condition
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/article/count:
    get:
      operationId: countArticle
      description: Find a list of Article
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/ArticleCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/article/aggregate:
    get:
      operationId: aggregateArticle
      description: Aggregate Articles
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateArticle"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/article/groupBy:
    get:
      operationId: groupByArticle
      description: Group Articles by fields
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ArticleGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/conversation/create:
    post:
      operationId: createConversation
      description: Create a new Conversation
      tags:
        - conversation
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversationCreateArgs"
  /api/model/conversation/createMany:
    post:
      operationId: createManyConversation
      description: Create several Conversation
      tags:
        - conversation
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversationCreateManyArgs"
  /api/model/conversation/findUnique:
    get:
      operationId: findUniqueConversation
      description: Find one unique Conversation
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/conversation/findFirst:
    get:
      operationId: findFirstConversation
      description: Find the first Conversation matching the given condition
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/conversation/findMany:
    get:
      operationId: findManyConversation
      description: Find a list of Conversation
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/conversation/update:
    patch:
      operationId: updateConversation
      description: Update a Conversation
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversationUpdateArgs"
  /api/model/conversation/updateMany:
    patch:
      operationId: updateManyConversation
      description: Update Conversations matching the given condition
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversationUpdateManyArgs"
  /api/model/conversation/upsert:
    post:
      operationId: upsertConversation
      description: Upsert a Conversation
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversationUpsertArgs"
  /api/model/conversation/delete:
    delete:
      operationId: deleteConversation
      description: Delete one unique Conversation
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/conversation/deleteMany:
    delete:
      operationId: deleteManyConversation
      description: Delete Conversations matching the given condition
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/conversation/count:
    get:
      operationId: countConversation
      description: Find a list of Conversation
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/ConversationCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/conversation/aggregate:
    get:
      operationId: aggregateConversation
      description: Aggregate Conversations
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateConversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/conversation/groupBy:
    get:
      operationId: groupByConversation
      description: Group Conversations by fields
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ConversationGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/create:
    post:
      operationId: createAccount
      description: Create a new Account
      tags:
        - account
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateArgs"
  /api/model/account/createMany:
    post:
      operationId: createManyAccount
      description: Create several Account
      tags:
        - account
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateManyArgs"
  /api/model/account/findUnique:
    get:
      operationId: findUniqueAccount
      description: Find one unique Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/findFirst:
    get:
      operationId: findFirstAccount
      description: Find the first Account matching the given condition
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/findMany:
    get:
      operationId: findManyAccount
      description: Find a list of Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/update:
    patch:
      operationId: updateAccount
      description: Update a Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpdateArgs"
  /api/model/account/updateMany:
    patch:
      operationId: updateManyAccount
      description: Update Accounts matching the given condition
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpdateManyArgs"
  /api/model/account/upsert:
    post:
      operationId: upsertAccount
      description: Upsert a Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpsertArgs"
  /api/model/account/delete:
    delete:
      operationId: deleteAccount
      description: Delete one unique Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/deleteMany:
    delete:
      operationId: deleteManyAccount
      description: Delete Accounts matching the given condition
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/count:
    get:
      operationId: countAccount
      description: Find a list of Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/AccountCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/aggregate:
    get:
      operationId: aggregateAccount
      description: Aggregate Accounts
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateAccount"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/groupBy:
    get:
      operationId: groupByAccount
      description: Group Accounts by fields
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AccountGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/create:
    post:
      operationId: createSession
      description: Create a new Session
      tags:
        - session
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionCreateArgs"
  /api/model/session/createMany:
    post:
      operationId: createManySession
      description: Create several Session
      tags:
        - session
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionCreateManyArgs"
  /api/model/session/findUnique:
    get:
      operationId: findUniqueSession
      description: Find one unique Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/findFirst:
    get:
      operationId: findFirstSession
      description: Find the first Session matching the given condition
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/findMany:
    get:
      operationId: findManySession
      description: Find a list of Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/update:
    patch:
      operationId: updateSession
      description: Update a Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionUpdateArgs"
  /api/model/session/updateMany:
    patch:
      operationId: updateManySession
      description: Update Sessions matching the given condition
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionUpdateManyArgs"
  /api/model/session/upsert:
    post:
      operationId: upsertSession
      description: Upsert a Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionUpsertArgs"
  /api/model/session/delete:
    delete:
      operationId: deleteSession
      description: Delete one unique Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/deleteMany:
    delete:
      operationId: deleteManySession
      description: Delete Sessions matching the given condition
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/count:
    get:
      operationId: countSession
      description: Find a list of Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/SessionCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/aggregate:
    get:
      operationId: aggregateSession
      description: Aggregate Sessions
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateSession"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/groupBy:
    get:
      operationId: groupBySession
      description: Group Sessions by fields
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SessionGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/create:
    post:
      operationId: createUser
      description: Create a new User
      tags:
        - user
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateArgs"
  /api/model/user/createMany:
    post:
      operationId: createManyUser
      description: Create several User
      tags:
        - user
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateManyArgs"
  /api/model/user/findUnique:
    get:
      operationId: findUniqueUser
      description: Find one unique User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/findFirst:
    get:
      operationId: findFirstUser
      description: Find the first User matching the given condition
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/findMany:
    get:
      operationId: findManyUser
      description: Find a list of User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/update:
    patch:
      operationId: updateUser
      description: Update a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateArgs"
  /api/model/user/updateMany:
    patch:
      operationId: updateManyUser
      description: Update Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateManyArgs"
  /api/model/user/upsert:
    post:
      operationId: upsertUser
      description: Upsert a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpsertArgs"
  /api/model/user/delete:
    delete:
      operationId: deleteUser
      description: Delete one unique User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/deleteMany:
    delete:
      operationId: deleteManyUser
      description: Delete Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/count:
    get:
      operationId: countUser
      description: Find a list of User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/UserCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/aggregate:
    get:
      operationId: aggregateUser
      description: Aggregate Users
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/groupBy:
    get:
      operationId: groupByUser
      description: Group Users by fields
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/create:
    post:
      operationId: createVerificationToken
      description: Create a new VerificationToken
      tags:
        - verificationToken
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenCreateArgs"
  /api/model/verificationToken/createMany:
    post:
      operationId: createManyVerificationToken
      description: Create several VerificationToken
      tags:
        - verificationToken
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenCreateManyArgs"
  /api/model/verificationToken/findUnique:
    get:
      operationId: findUniqueVerificationToken
      description: Find one unique VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/findFirst:
    get:
      operationId: findFirstVerificationToken
      description: Find the first VerificationToken matching the given condition
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/findMany:
    get:
      operationId: findManyVerificationToken
      description: Find a list of VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/update:
    patch:
      operationId: updateVerificationToken
      description: Update a VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenUpdateArgs"
  /api/model/verificationToken/updateMany:
    patch:
      operationId: updateManyVerificationToken
      description: Update VerificationTokens matching the given condition
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenUpdateManyArgs"
  /api/model/verificationToken/upsert:
    post:
      operationId: upsertVerificationToken
      description: Upsert a VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenUpsertArgs"
  /api/model/verificationToken/delete:
    delete:
      operationId: deleteVerificationToken
      description: Delete one unique VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/deleteMany:
    delete:
      operationId: deleteManyVerificationToken
      description: Delete VerificationTokens matching the given condition
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/count:
    get:
      operationId: countVerificationToken
      description: Find a list of VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/VerificationTokenCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/aggregate:
    get:
      operationId: aggregateVerificationToken
      description: Aggregate VerificationTokens
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateVerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/groupBy:
    get:
      operationId: groupByVerificationToken
      description: Group VerificationTokens by fields
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/VerificationTokenGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
