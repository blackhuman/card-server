openapi: 3.1.0
info:
  title: ZenStack Generated API
  version: 1.0.0
tags:
  - name: card
    description: Card operations
  - name: article
    description: Article operations
  - name: conversation
    description: Conversation operations
  - name: user
    description: User operations
components:
  schemas:
    CardScalarFieldEnum:
      type: string
      enum:
        - id
        - text
        - textTranslation
        - sentence
        - sentenceTranslation
        - articleId
        - conversationId
        - createdAt
        - updatedAt
        - createdById
    ArticleScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - externalLink
        - createdAt
        - updatedAt
        - createdById
    ConversationScalarFieldEnum:
      type: string
      enum:
        - id
        - messages
        - createdAt
        - updatedAt
    UserScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - email
        - emailVerified
        - password
        - image
    SortOrder:
      type: string
      enum:
        - asc
        - desc
    QueryMode:
      type: string
      enum:
        - default
        - insensitive
    NullsOrder:
      type: string
      enum:
        - first
        - last
    Card:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        article:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Article"
        articleId:
          oneOf:
            - type: "null"
            - type: string
        conversation:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Conversation"
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
      required:
        - id
        - text
        - createdAt
        - updatedAt
    Article:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        cards:
          type: array
          items:
            $ref: "#/components/schemas/Card"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - createdById
    Conversation:
      type: object
      properties:
        id:
          type: string
        messages:
          type: string
        card:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Card"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - messages
        - createdAt
        - updatedAt
    User:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          type: string
        image:
          oneOf:
            - type: "null"
            - type: string
      required:
        - id
        - password
    CardWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/CardWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/CardWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/CardWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        text:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        textTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        sentence:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        sentenceTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        articleId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        conversationId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        article:
          oneOf:
            - $ref: "#/components/schemas/ArticleNullableScalarRelationFilter"
            - $ref: "#/components/schemas/ArticleWhereInput"
            - type: "null"
        conversation:
          oneOf:
            - $ref: "#/components/schemas/ConversationNullableScalarRelationFilter"
            - $ref: "#/components/schemas/ConversationWhereInput"
            - type: "null"
    CardOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        text:
          $ref: "#/components/schemas/SortOrder"
        textTranslation:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        sentence:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        sentenceTranslation:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        articleId:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        conversationId:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        createdById:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        article:
          $ref: "#/components/schemas/ArticleOrderByWithRelationInput"
        conversation:
          $ref: "#/components/schemas/ConversationOrderByWithRelationInput"
    CardWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        conversationId:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/CardWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/CardWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/CardWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardWhereInput"
        text:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        textTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        sentence:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        sentenceTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        articleId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        article:
          oneOf:
            - $ref: "#/components/schemas/ArticleNullableScalarRelationFilter"
            - $ref: "#/components/schemas/ArticleWhereInput"
            - type: "null"
        conversation:
          oneOf:
            - $ref: "#/components/schemas/ConversationNullableScalarRelationFilter"
            - $ref: "#/components/schemas/ConversationWhereInput"
            - type: "null"
    CardScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/CardScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/CardScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/CardScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        text:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        textTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        sentence:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        sentenceTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        articleId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        conversationId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
    ArticleWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ArticleWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ArticleWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ArticleWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        externalLink:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        cards:
          $ref: "#/components/schemas/CardListRelationFilter"
    ArticleOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        externalLink:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        createdById:
          $ref: "#/components/schemas/SortOrder"
        cards:
          $ref: "#/components/schemas/CardOrderByRelationAggregateInput"
    ArticleWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/ArticleWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ArticleWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ArticleWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        externalLink:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        cards:
          $ref: "#/components/schemas/CardListRelationFilter"
    ArticleScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ArticleScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ArticleScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ArticleScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        externalLink:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    ConversationWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ConversationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ConversationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ConversationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        messages:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        card:
          oneOf:
            - $ref: "#/components/schemas/CardNullableScalarRelationFilter"
            - $ref: "#/components/schemas/CardWhereInput"
            - type: "null"
    ConversationOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        messages:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        card:
          $ref: "#/components/schemas/CardOrderByWithRelationInput"
    ConversationWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/ConversationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ConversationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ConversationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationWhereInput"
        messages:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        card:
          oneOf:
            - $ref: "#/components/schemas/CardNullableScalarRelationFilter"
            - $ref: "#/components/schemas/CardWhereInput"
            - type: "null"
    ConversationScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ConversationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ConversationScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ConversationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        messages:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    UserWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        email:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        password:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
    UserOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        email:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        password:
          $ref: "#/components/schemas/SortOrder"
        image:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
    UserWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        password:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
    UserScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        email:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        password:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
    CardCreateInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
        article:
          $ref: "#/components/schemas/ArticleCreateNestedOneWithoutCardsInput"
        conversation:
          $ref: "#/components/schemas/ConversationCreateNestedOneWithoutCardInput"
      required:
        - text
    CardUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        article:
          $ref: "#/components/schemas/ArticleUpdateOneWithoutCardsNestedInput"
        conversation:
          $ref: "#/components/schemas/ConversationUpdateOneWithoutCardNestedInput"
    CardCreateManyInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        articleId:
          oneOf:
            - type: "null"
            - type: string
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
      required:
        - text
    CardUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    ArticleCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
        cards:
          $ref: "#/components/schemas/CardCreateNestedManyWithoutArticleInput"
      required:
        - name
    ArticleUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        externalLink:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cards:
          $ref: "#/components/schemas/CardUpdateManyWithoutArticleNestedInput"
    ArticleCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - name
    ArticleUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        externalLink:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    ConversationCreateInput:
      type: object
      properties:
        id:
          type: string
        messages:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        card:
          $ref: "#/components/schemas/CardCreateNestedOneWithoutConversationInput"
      required:
        - messages
    ConversationUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        messages:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        card:
          $ref: "#/components/schemas/CardUpdateOneWithoutConversationNestedInput"
    ConversationCreateManyInput:
      type: object
      properties:
        id:
          type: string
        messages:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - messages
    ConversationUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        messages:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    UserCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          type: string
        image:
          oneOf:
            - type: "null"
            - type: string
      required:
        - password
    UserUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    UserCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          type: string
        image:
          oneOf:
            - type: "null"
            - type: string
      required:
        - password
    UserUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    StringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    StringNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
            - type: "null"
    DateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    ArticleNullableScalarRelationFilter:
      type: object
      properties:
        is:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleWhereInput"
        isNot:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleWhereInput"
    ConversationNullableScalarRelationFilter:
      type: object
      properties:
        is:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationWhereInput"
        isNot:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationWhereInput"
    SortOrderInput:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/SortOrder"
        nulls:
          $ref: "#/components/schemas/NullsOrder"
      required:
        - sort
    StringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    StringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    DateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    CardListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/CardWhereInput"
        some:
          $ref: "#/components/schemas/CardWhereInput"
        none:
          $ref: "#/components/schemas/CardWhereInput"
    CardOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    CardNullableScalarRelationFilter:
      type: object
      properties:
        is:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/CardWhereInput"
        isNot:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/CardWhereInput"
    DateTimeNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableFilter"
            - type: "null"
    DateTimeNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    ArticleCreateNestedOneWithoutCardsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ArticleCreateWithoutCardsInput"
            - $ref: "#/components/schemas/ArticleUncheckedCreateWithoutCardsInput"
        connectOrCreate:
          $ref: "#/components/schemas/ArticleCreateOrConnectWithoutCardsInput"
        connect:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
    ConversationCreateNestedOneWithoutCardInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ConversationCreateWithoutCardInput"
            - $ref: "#/components/schemas/ConversationUncheckedCreateWithoutCardInput"
        connectOrCreate:
          $ref: "#/components/schemas/ConversationCreateOrConnectWithoutCardInput"
        connect:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
    StringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
    NullableStringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          oneOf:
            - type: "null"
            - type: string
    DateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
          format: date-time
    ArticleUpdateOneWithoutCardsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ArticleCreateWithoutCardsInput"
            - $ref: "#/components/schemas/ArticleUncheckedCreateWithoutCardsInput"
        connectOrCreate:
          $ref: "#/components/schemas/ArticleCreateOrConnectWithoutCardsInput"
        upsert:
          $ref: "#/components/schemas/ArticleUpsertWithoutCardsInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleWhereInput"
        connect:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ArticleUpdateToOneWithWhereWithoutCardsInput"
            - $ref: "#/components/schemas/ArticleUpdateWithoutCardsInput"
            - $ref: "#/components/schemas/ArticleUncheckedUpdateWithoutCardsInput"
    ConversationUpdateOneWithoutCardNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ConversationCreateWithoutCardInput"
            - $ref: "#/components/schemas/ConversationUncheckedCreateWithoutCardInput"
        connectOrCreate:
          $ref: "#/components/schemas/ConversationCreateOrConnectWithoutCardInput"
        upsert:
          $ref: "#/components/schemas/ConversationUpsertWithoutCardInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ConversationWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ConversationWhereInput"
        connect:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ConversationUpdateToOneWithWhereWithoutCardInput"
            - $ref: "#/components/schemas/ConversationUpdateWithoutCardInput"
            - $ref: "#/components/schemas/ConversationUncheckedUpdateWithoutCardInput"
    CardCreateNestedManyWithoutArticleInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CardCreateWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardCreateWithoutArticleInput"
            - $ref: "#/components/schemas/CardUncheckedCreateWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardUncheckedCreateWithoutArticleInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CardCreateOrConnectWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardCreateOrConnectWithoutArticleInput"
        createMany:
          $ref: "#/components/schemas/CardCreateManyArticleInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardWhereUniqueInput"
    CardUpdateManyWithoutArticleNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CardCreateWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardCreateWithoutArticleInput"
            - $ref: "#/components/schemas/CardUncheckedCreateWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardUncheckedCreateWithoutArticleInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CardCreateOrConnectWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardCreateOrConnectWithoutArticleInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/CardUpsertWithWhereUniqueWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardUpsertWithWhereUniqueWithoutArticleInput"
        createMany:
          $ref: "#/components/schemas/CardCreateManyArticleInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/CardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/CardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/CardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CardUpdateWithWhereUniqueWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardUpdateWithWhereUniqueWithoutArticleInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/CardUpdateManyWithWhereWithoutArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardUpdateManyWithWhereWithoutArticleInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/CardScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardScalarWhereInput"
    CardCreateNestedOneWithoutConversationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CardCreateWithoutConversationInput"
            - $ref: "#/components/schemas/CardUncheckedCreateWithoutConversationInput"
        connectOrCreate:
          $ref: "#/components/schemas/CardCreateOrConnectWithoutConversationInput"
        connect:
          $ref: "#/components/schemas/CardWhereUniqueInput"
    CardUpdateOneWithoutConversationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CardCreateWithoutConversationInput"
            - $ref: "#/components/schemas/CardUncheckedCreateWithoutConversationInput"
        connectOrCreate:
          $ref: "#/components/schemas/CardCreateOrConnectWithoutConversationInput"
        upsert:
          $ref: "#/components/schemas/CardUpsertWithoutConversationInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CardWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CardWhereInput"
        connect:
          $ref: "#/components/schemas/CardWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CardUpdateToOneWithWhereWithoutConversationInput"
            - $ref: "#/components/schemas/CardUpdateWithoutConversationInput"
            - $ref: "#/components/schemas/CardUncheckedUpdateWithoutConversationInput"
    NullableDateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    NestedStringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    NestedStringNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
            - type: "null"
    NestedDateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedStringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    NestedIntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    NestedStringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    NestedIntNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: integer
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
            - type: "null"
    NestedDateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedDateTimeNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableFilter"
            - type: "null"
    NestedDateTimeNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    ArticleCreateWithoutCardsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - name
    ArticleUncheckedCreateWithoutCardsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - name
    ArticleCreateOrConnectWithoutCardsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ArticleCreateWithoutCardsInput"
            - $ref: "#/components/schemas/ArticleUncheckedCreateWithoutCardsInput"
      required:
        - where
        - create
    ConversationCreateWithoutCardInput:
      type: object
      properties:
        id:
          type: string
        messages:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - messages
    ConversationUncheckedCreateWithoutCardInput:
      type: object
      properties:
        id:
          type: string
        messages:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - messages
    ConversationCreateOrConnectWithoutCardInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ConversationCreateWithoutCardInput"
            - $ref: "#/components/schemas/ConversationUncheckedCreateWithoutCardInput"
      required:
        - where
        - create
    ArticleUpsertWithoutCardsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/ArticleUpdateWithoutCardsInput"
            - $ref: "#/components/schemas/ArticleUncheckedUpdateWithoutCardsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ArticleCreateWithoutCardsInput"
            - $ref: "#/components/schemas/ArticleUncheckedCreateWithoutCardsInput"
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
      required:
        - update
        - create
    ArticleUpdateToOneWithWhereWithoutCardsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ArticleUpdateWithoutCardsInput"
            - $ref: "#/components/schemas/ArticleUncheckedUpdateWithoutCardsInput"
      required:
        - data
    ArticleUpdateWithoutCardsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        externalLink:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    ArticleUncheckedUpdateWithoutCardsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        externalLink:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    ConversationUpsertWithoutCardInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/ConversationUpdateWithoutCardInput"
            - $ref: "#/components/schemas/ConversationUncheckedUpdateWithoutCardInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ConversationCreateWithoutCardInput"
            - $ref: "#/components/schemas/ConversationUncheckedCreateWithoutCardInput"
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
      required:
        - update
        - create
    ConversationUpdateToOneWithWhereWithoutCardInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ConversationUpdateWithoutCardInput"
            - $ref: "#/components/schemas/ConversationUncheckedUpdateWithoutCardInput"
      required:
        - data
    ConversationUpdateWithoutCardInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        messages:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ConversationUncheckedUpdateWithoutCardInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        messages:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    CardCreateWithoutArticleInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
        conversation:
          $ref: "#/components/schemas/ConversationCreateNestedOneWithoutCardInput"
      required:
        - text
    CardUncheckedCreateWithoutArticleInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
      required:
        - text
    CardCreateOrConnectWithoutArticleInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CardWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/CardCreateWithoutArticleInput"
            - $ref: "#/components/schemas/CardUncheckedCreateWithoutArticleInput"
      required:
        - where
        - create
    CardCreateManyArticleInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/CardCreateManyArticleInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardCreateManyArticleInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    CardUpsertWithWhereUniqueWithoutArticleInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CardWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CardUpdateWithoutArticleInput"
            - $ref: "#/components/schemas/CardUncheckedUpdateWithoutArticleInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/CardCreateWithoutArticleInput"
            - $ref: "#/components/schemas/CardUncheckedCreateWithoutArticleInput"
      required:
        - where
        - update
        - create
    CardUpdateWithWhereUniqueWithoutArticleInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CardWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/CardUpdateWithoutArticleInput"
            - $ref: "#/components/schemas/CardUncheckedUpdateWithoutArticleInput"
      required:
        - where
        - data
    CardUpdateManyWithWhereWithoutArticleInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CardScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/CardUpdateManyMutationInput"
            - $ref: "#/components/schemas/CardUncheckedUpdateManyWithoutArticleInput"
      required:
        - where
        - data
    CardScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/CardScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/CardScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/CardScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        text:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        textTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        sentence:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        sentenceTranslation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        articleId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        conversationId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
    CardCreateWithoutConversationInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
        article:
          $ref: "#/components/schemas/ArticleCreateNestedOneWithoutCardsInput"
      required:
        - text
    CardUncheckedCreateWithoutConversationInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        articleId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
      required:
        - text
    CardCreateOrConnectWithoutConversationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CardWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/CardCreateWithoutConversationInput"
            - $ref: "#/components/schemas/CardUncheckedCreateWithoutConversationInput"
      required:
        - where
        - create
    CardUpsertWithoutConversationInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/CardUpdateWithoutConversationInput"
            - $ref: "#/components/schemas/CardUncheckedUpdateWithoutConversationInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/CardCreateWithoutConversationInput"
            - $ref: "#/components/schemas/CardUncheckedCreateWithoutConversationInput"
        where:
          $ref: "#/components/schemas/CardWhereInput"
      required:
        - update
        - create
    CardUpdateToOneWithWhereWithoutConversationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CardWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/CardUpdateWithoutConversationInput"
            - $ref: "#/components/schemas/CardUncheckedUpdateWithoutConversationInput"
      required:
        - data
    CardUpdateWithoutConversationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        article:
          $ref: "#/components/schemas/ArticleUpdateOneWithoutCardsNestedInput"
    CardUncheckedUpdateWithoutConversationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        articleId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    CardCreateManyArticleInput:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
      required:
        - text
    CardUpdateWithoutArticleInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        conversation:
          $ref: "#/components/schemas/ConversationUpdateOneWithoutCardNestedInput"
    CardUncheckedUpdateWithoutArticleInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        conversationId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    CardUncheckedUpdateManyWithoutArticleInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        text:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        textTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentence:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentenceTranslation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        conversationId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    CardDefaultArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/CardSelect"
        include:
          $ref: "#/components/schemas/CardInclude"
    ArticleDefaultArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
    ConversationDefaultArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
    CardInclude:
      type: object
      properties:
        article:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleDefaultArgs"
        conversation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ConversationDefaultArgs"
    ArticleInclude:
      type: object
      properties:
        cards:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CardFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleCountOutputTypeDefaultArgs"
    ConversationInclude:
      type: object
      properties:
        card:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CardDefaultArgs"
    ArticleCountOutputTypeSelect:
      type: object
      properties:
        cards:
          type: boolean
    ArticleCountOutputTypeDefaultArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ArticleCountOutputTypeSelect"
    CardSelect:
      type: object
      properties:
        id:
          type: boolean
        text:
          type: boolean
        textTranslation:
          type: boolean
        sentence:
          type: boolean
        sentenceTranslation:
          type: boolean
        article:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleDefaultArgs"
        articleId:
          type: boolean
        conversation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ConversationDefaultArgs"
        conversationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
    ArticleSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        externalLink:
          type: boolean
        cards:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CardFindManyArgs"
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleCountOutputTypeDefaultArgs"
    ConversationSelect:
      type: object
      properties:
        id:
          type: boolean
        messages:
          type: boolean
        card:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CardDefaultArgs"
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    UserSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        password:
          type: boolean
        image:
          type: boolean
    CardCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        text:
          type: boolean
        textTranslation:
          type: boolean
        sentence:
          type: boolean
        sentenceTranslation:
          type: boolean
        articleId:
          type: boolean
        conversationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
        _all:
          type: boolean
    CardMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        text:
          type: boolean
        textTranslation:
          type: boolean
        sentence:
          type: boolean
        sentenceTranslation:
          type: boolean
        articleId:
          type: boolean
        conversationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
    CardMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        text:
          type: boolean
        textTranslation:
          type: boolean
        sentence:
          type: boolean
        sentenceTranslation:
          type: boolean
        articleId:
          type: boolean
        conversationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
    ArticleCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        externalLink:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
        _all:
          type: boolean
    ArticleMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        externalLink:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
    ArticleMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        externalLink:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        createdById:
          type: boolean
    ConversationCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        messages:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _all:
          type: boolean
    ConversationMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        messages:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    ConversationMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        messages:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    UserCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        password:
          type: boolean
        image:
          type: boolean
        _all:
          type: boolean
    UserMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        password:
          type: boolean
        image:
          type: boolean
    UserMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        password:
          type: boolean
        image:
          type: boolean
    AggregateCard:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/CardCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/CardMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/CardMaxAggregateOutputType"
    CardGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        articleId:
          oneOf:
            - type: "null"
            - type: string
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/CardCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/CardMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/CardMaxAggregateOutputType"
      required:
        - id
        - text
        - createdAt
        - updatedAt
    AggregateArticle:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleMaxAggregateOutputType"
    ArticleGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdById:
          type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ArticleMaxAggregateOutputType"
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - createdById
    AggregateConversation:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationMaxAggregateOutputType"
    ConversationGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        messages:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ConversationMaxAggregateOutputType"
      required:
        - id
        - messages
        - createdAt
        - updatedAt
    AggregateUser:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMaxAggregateOutputType"
    UserGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          type: string
        image:
          oneOf:
            - type: "null"
            - type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMaxAggregateOutputType"
      required:
        - id
        - password
    CardCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        text:
          type: integer
        textTranslation:
          type: integer
        sentence:
          type: integer
        sentenceTranslation:
          type: integer
        articleId:
          type: integer
        conversationId:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        createdById:
          type: integer
        _all:
          type: integer
      required:
        - id
        - text
        - textTranslation
        - sentence
        - sentenceTranslation
        - articleId
        - conversationId
        - createdAt
        - updatedAt
        - createdById
        - _all
    CardMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        text:
          oneOf:
            - type: "null"
            - type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        articleId:
          oneOf:
            - type: "null"
            - type: string
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
    CardMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        text:
          oneOf:
            - type: "null"
            - type: string
        textTranslation:
          oneOf:
            - type: "null"
            - type: string
        sentence:
          oneOf:
            - type: "null"
            - type: string
        sentenceTranslation:
          oneOf:
            - type: "null"
            - type: string
        articleId:
          oneOf:
            - type: "null"
            - type: string
        conversationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
    ArticleCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        externalLink:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        createdById:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - externalLink
        - createdAt
        - updatedAt
        - createdById
        - _all
    ArticleMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
    ArticleMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        externalLink:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
    ConversationCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        messages:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        _all:
          type: integer
      required:
        - id
        - messages
        - createdAt
        - updatedAt
        - _all
    ConversationMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        messages:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    ConversationMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        messages:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    UserCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        email:
          type: integer
        emailVerified:
          type: integer
        password:
          type: integer
        image:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - email
        - emailVerified
        - password
        - image
        - _all
    UserMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          oneOf:
            - type: "null"
            - type: string
        image:
          oneOf:
            - type: "null"
            - type: string
    UserMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        password:
          oneOf:
            - type: "null"
            - type: string
        image:
          oneOf:
            - type: "null"
            - type: string
    _Meta:
      type: object
      description: Meta information about the request or response
      properties:
        serialization:
          description: Serialization metadata
      additionalProperties: true
    _Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - message
          properties:
            prisma:
              type: boolean
              description: Indicates if the error occurred during a Prisma call
            rejectedByPolicy:
              type: boolean
              description: Indicates if the error was due to rejection by a policy
            code:
              type: string
              description: Prisma error code. Only available when "prisma" field is true.
            message:
              type: string
              description: Error message
            reason:
              type: string
              description: Detailed error reason
            zodErrors:
              type: object
              additionalProperties: true
              description: Zod validation errors if the error is due to data validation
                failure
          additionalProperties: true
    BatchPayload:
      type: object
      properties:
        count:
          type: integer
    CardCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/CardSelect"
        include:
          $ref: "#/components/schemas/CardInclude"
        data:
          $ref: "#/components/schemas/CardCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CardCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/CardCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/CardCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    CardFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/CardSelect"
        include:
          $ref: "#/components/schemas/CardInclude"
        where:
          $ref: "#/components/schemas/CardWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CardFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/CardSelect"
        include:
          $ref: "#/components/schemas/CardInclude"
        where:
          $ref: "#/components/schemas/CardWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CardFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/CardSelect"
        include:
          $ref: "#/components/schemas/CardInclude"
        where:
          $ref: "#/components/schemas/CardWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CardUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/CardSelect"
        include:
          $ref: "#/components/schemas/CardInclude"
        where:
          $ref: "#/components/schemas/CardWhereUniqueInput"
        data:
          $ref: "#/components/schemas/CardUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CardUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/CardWhereInput"
        data:
          $ref: "#/components/schemas/CardUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CardUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/CardSelect"
        include:
          $ref: "#/components/schemas/CardInclude"
        where:
          $ref: "#/components/schemas/CardWhereUniqueInput"
        create:
          $ref: "#/components/schemas/CardCreateInput"
        update:
          $ref: "#/components/schemas/CardUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CardDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/CardSelect"
        include:
          $ref: "#/components/schemas/CardInclude"
        where:
          $ref: "#/components/schemas/CardWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CardDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CardWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CardCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/CardSelect"
        where:
          $ref: "#/components/schemas/CardWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CardAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CardWhereInput"
        orderBy:
          $ref: "#/components/schemas/CardOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/CardWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CardCountAggregateInput"
        _min:
          $ref: "#/components/schemas/CardMinAggregateInput"
        _max:
          $ref: "#/components/schemas/CardMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CardGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CardWhereInput"
        orderBy:
          $ref: "#/components/schemas/CardOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/CardScalarFieldEnum"
        having:
          $ref: "#/components/schemas/CardScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CardCountAggregateInput"
        _min:
          $ref: "#/components/schemas/CardMinAggregateInput"
        _max:
          $ref: "#/components/schemas/CardMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        data:
          $ref: "#/components/schemas/ArticleCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ArticleCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/ArticleCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        where:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        where:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        data:
          $ref: "#/components/schemas/ArticleUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        data:
          $ref: "#/components/schemas/ArticleUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        where:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        create:
          $ref: "#/components/schemas/ArticleCreateInput"
        update:
          $ref: "#/components/schemas/ArticleUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        include:
          $ref: "#/components/schemas/ArticleInclude"
        where:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ArticleSelect"
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        orderBy:
          $ref: "#/components/schemas/ArticleOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/ArticleWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ArticleMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ArticleMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ArticleGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ArticleWhereInput"
        orderBy:
          $ref: "#/components/schemas/ArticleOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/ArticleScalarFieldEnum"
        having:
          $ref: "#/components/schemas/ArticleScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ArticleCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ArticleMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ArticleMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        data:
          $ref: "#/components/schemas/ConversationCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ConversationCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/ConversationCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        where:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        where:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        data:
          $ref: "#/components/schemas/ConversationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        data:
          $ref: "#/components/schemas/ConversationUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        where:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        create:
          $ref: "#/components/schemas/ConversationCreateInput"
        update:
          $ref: "#/components/schemas/ConversationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        include:
          $ref: "#/components/schemas/ConversationInclude"
        where:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ConversationSelect"
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        orderBy:
          $ref: "#/components/schemas/ConversationOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/ConversationWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ConversationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ConversationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ConversationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ConversationGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ConversationWhereInput"
        orderBy:
          $ref: "#/components/schemas/ConversationOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/ConversationScalarFieldEnum"
        having:
          $ref: "#/components/schemas/ConversationScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ConversationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ConversationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ConversationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        data:
          $ref: "#/components/schemas/UserCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/UserCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        data:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          $ref: "#/components/schemas/UserUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          $ref: "#/components/schemas/UserCreateInput"
        update:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/UserScalarFieldEnum"
        having:
          $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
paths:
  /card/create:
    post:
      operationId: createCard
      description: Create a new Card
      tags:
        - card
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Card"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardCreateArgs"
  /card/createMany:
    post:
      operationId: createManyCard
      description: Create several Card
      tags:
        - card
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardCreateManyArgs"
  /card/findUnique:
    get:
      operationId: findUniqueCard
      description: Find one unique Card
      tags:
        - card
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Card"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /card/findFirst:
    get:
      operationId: findFirstCard
      description: Find the first Card matching the given condition
      tags:
        - card
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Card"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /card/findMany:
    get:
      operationId: findManyCard
      description: Find a list of Card
      tags:
        - card
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Card"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /card/update:
    patch:
      operationId: updateCard
      description: Update a Card
      tags:
        - card
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Card"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardUpdateArgs"
  /card/updateMany:
    patch:
      operationId: updateManyCard
      description: Update Cards matching the given condition
      tags:
        - card
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardUpdateManyArgs"
  /card/upsert:
    post:
      operationId: upsertCard
      description: Upsert a Card
      tags:
        - card
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Card"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardUpsertArgs"
  /card/delete:
    delete:
      operationId: deleteCard
      description: Delete one unique Card
      tags:
        - card
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Card"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /card/deleteMany:
    delete:
      operationId: deleteManyCard
      description: Delete Cards matching the given condition
      tags:
        - card
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /card/count:
    get:
      operationId: countCard
      description: Find a list of Card
      tags:
        - card
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/CardCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /card/aggregate:
    get:
      operationId: aggregateCard
      description: Aggregate Cards
      tags:
        - card
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /card/groupBy:
    get:
      operationId: groupByCard
      description: Group Cards by fields
      tags:
        - card
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CardGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /article/create:
    post:
      operationId: createArticle
      description: Create a new Article
      tags:
        - article
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleCreateArgs"
  /article/createMany:
    post:
      operationId: createManyArticle
      description: Create several Article
      tags:
        - article
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleCreateManyArgs"
  /article/findUnique:
    get:
      operationId: findUniqueArticle
      description: Find one unique Article
      tags:
        - article
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /article/findFirst:
    get:
      operationId: findFirstArticle
      description: Find the first Article matching the given condition
      tags:
        - article
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /article/findMany:
    get:
      operationId: findManyArticle
      description: Find a list of Article
      tags:
        - article
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /article/update:
    patch:
      operationId: updateArticle
      description: Update a Article
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleUpdateArgs"
  /article/updateMany:
    patch:
      operationId: updateManyArticle
      description: Update Articles matching the given condition
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleUpdateManyArgs"
  /article/upsert:
    post:
      operationId: upsertArticle
      description: Upsert a Article
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArticleUpsertArgs"
  /article/delete:
    delete:
      operationId: deleteArticle
      description: Delete one unique Article
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Article"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /article/deleteMany:
    delete:
      operationId: deleteManyArticle
      description: Delete Articles matching the given condition
      tags:
        - article
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /article/count:
    get:
      operationId: countArticle
      description: Find a list of Article
      tags:
        - article
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/ArticleCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /article/aggregate:
    get:
      operationId: aggregateArticle
      description: Aggregate Articles
      tags:
        - article
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateArticle"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /article/groupBy:
    get:
      operationId: groupByArticle
      description: Group Articles by fields
      tags:
        - article
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ArticleGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /conversation/create:
    post:
      operationId: createConversation
      description: Create a new Conversation
      tags:
        - conversation
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversationCreateArgs"
  /conversation/createMany:
    post:
      operationId: createManyConversation
      description: Create several Conversation
      tags:
        - conversation
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversationCreateManyArgs"
  /conversation/findUnique:
    get:
      operationId: findUniqueConversation
      description: Find one unique Conversation
      tags:
        - conversation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /conversation/findFirst:
    get:
      operationId: findFirstConversation
      description: Find the first Conversation matching the given condition
      tags:
        - conversation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /conversation/findMany:
    get:
      operationId: findManyConversation
      description: Find a list of Conversation
      tags:
        - conversation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /conversation/update:
    patch:
      operationId: updateConversation
      description: Update a Conversation
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversationUpdateArgs"
  /conversation/updateMany:
    patch:
      operationId: updateManyConversation
      description: Update Conversations matching the given condition
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversationUpdateManyArgs"
  /conversation/upsert:
    post:
      operationId: upsertConversation
      description: Upsert a Conversation
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversationUpsertArgs"
  /conversation/delete:
    delete:
      operationId: deleteConversation
      description: Delete one unique Conversation
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Conversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /conversation/deleteMany:
    delete:
      operationId: deleteManyConversation
      description: Delete Conversations matching the given condition
      tags:
        - conversation
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /conversation/count:
    get:
      operationId: countConversation
      description: Find a list of Conversation
      tags:
        - conversation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/ConversationCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /conversation/aggregate:
    get:
      operationId: aggregateConversation
      description: Aggregate Conversations
      tags:
        - conversation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateConversation"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /conversation/groupBy:
    get:
      operationId: groupByConversation
      description: Group Conversations by fields
      tags:
        - conversation
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ConversationGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/create:
    post:
      operationId: createUser
      description: Create a new User
      tags:
        - user
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateArgs"
  /user/createMany:
    post:
      operationId: createManyUser
      description: Create several User
      tags:
        - user
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateManyArgs"
  /user/findUnique:
    get:
      operationId: findUniqueUser
      description: Find one unique User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/findFirst:
    get:
      operationId: findFirstUser
      description: Find the first User matching the given condition
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/findMany:
    get:
      operationId: findManyUser
      description: Find a list of User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/update:
    patch:
      operationId: updateUser
      description: Update a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateArgs"
  /user/updateMany:
    patch:
      operationId: updateManyUser
      description: Update Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateManyArgs"
  /user/upsert:
    post:
      operationId: upsertUser
      description: Upsert a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpsertArgs"
  /user/delete:
    delete:
      operationId: deleteUser
      description: Delete one unique User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/deleteMany:
    delete:
      operationId: deleteManyUser
      description: Delete Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/count:
    get:
      operationId: countUser
      description: Find a list of User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/UserCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/aggregate:
    get:
      operationId: aggregateUser
      description: Aggregate Users
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/groupBy:
    get:
      operationId: groupByUser
      description: Group Users by fields
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
